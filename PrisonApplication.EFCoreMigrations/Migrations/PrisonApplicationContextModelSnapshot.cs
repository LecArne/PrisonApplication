// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrisonApplication.EFCoreMigrations;

#nullable disable

namespace PrisonApplication.EFCoreMigrations.Migrations
{
    [DbContext(typeof(PrisonApplicationContext))]
    partial class PrisonApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PrisonApplication.Models.Entity.Cells.Cell", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CellCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxNumberOfPersons")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfPersons")
                        .HasColumnType("int");

                    b.Property<Guid?>("PrisonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TypeOfCell")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrisonId");

                    b.ToTable("Cells");
                });

            modelBuilder.Entity("PrisonApplication.Models.Entity.Prisoners.Prisoner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CanComeOutEarly")
                        .HasColumnType("bit");

                    b.Property<Guid>("CellId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonInJail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalTermInMonths")
                        .HasColumnType("int");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CellId");

                    b.ToTable("Prisoners");
                });

            modelBuilder.Entity("PrisonApplication.Models.Entity.PrisonGroups.PrisonGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PrisonGroups");
                });

            modelBuilder.Entity("PrisonApplication.Models.Entity.Prisons.Prison", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PrisonGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PrisonGroupId");

                    b.ToTable("Prisons");
                });

            modelBuilder.Entity("PrisonApplication.Models.Entity.Cells.Cell", b =>
                {
                    b.HasOne("PrisonApplication.Models.Entity.Prisons.Prison", null)
                        .WithMany("Cells")
                        .HasForeignKey("PrisonId");
                });

            modelBuilder.Entity("PrisonApplication.Models.Entity.Prisoners.Prisoner", b =>
                {
                    b.HasOne("PrisonApplication.Models.Entity.Cells.Cell", "Cell")
                        .WithMany("Prisoners")
                        .HasForeignKey("CellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cell");
                });

            modelBuilder.Entity("PrisonApplication.Models.Entity.Prisons.Prison", b =>
                {
                    b.HasOne("PrisonApplication.Models.Entity.PrisonGroups.PrisonGroup", null)
                        .WithMany("Prisons")
                        .HasForeignKey("PrisonGroupId");
                });

            modelBuilder.Entity("PrisonApplication.Models.Entity.Cells.Cell", b =>
                {
                    b.Navigation("Prisoners");
                });

            modelBuilder.Entity("PrisonApplication.Models.Entity.PrisonGroups.PrisonGroup", b =>
                {
                    b.Navigation("Prisons");
                });

            modelBuilder.Entity("PrisonApplication.Models.Entity.Prisons.Prison", b =>
                {
                    b.Navigation("Cells");
                });
#pragma warning restore 612, 618
        }
    }
}
